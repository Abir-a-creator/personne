[{"C:\\Users\\Abir\\Desktop\\Person\\person\\src\\index.js":"1","C:\\Users\\Abir\\Desktop\\Person\\person\\src\\App.js":"2","C:\\Users\\Abir\\Desktop\\Person\\person\\src\\reportWebVitals.js":"3","C:\\Users\\Abir\\Desktop\\Person\\person\\src\\Component\\Counter.js":"4"},{"size":500,"mtime":499162500000,"results":"5","hashOfConfig":"6"},{"size":1008,"mtime":1613028838310,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"6"},{"size":922,"mtime":1612333659588,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"td0h2m",{"filePath":"13","messages":"14","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"C:\\Users\\Abir\\Desktop\\Person\\person\\src\\index.js",[],["20","21"],"C:\\Users\\Abir\\Desktop\\Person\\person\\src\\App.js",["22","23","24"],"C:\\Users\\Abir\\Desktop\\Person\\person\\src\\reportWebVitals.js",[],"C:\\Users\\Abir\\Desktop\\Person\\person\\src\\Component\\Counter.js",["25","26","27","28"],"import React, { Component } from 'react';\r\n\r\nexport default class Counter extends Component {\r\n\r\n    state = { time: 0}\r\n\r\n    tickHandler=()=>{\r\n        this.setState({\r\n           time:this.state.time+1 \r\n        })\r\n        return this.state.time;\r\n    }\r\n\r\n    componentDidMount(){\r\n        var timer = setInterval(this.tickHandler,1000)\r\n        this.setState({\r\n            time:timer\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const displayTime = () => {\r\n          if (this.state.time < 60) {\r\n              return this.state.time + 'Second(s)'\r\n          }  \r\n\r\n          const SS = this.state.time % 60;\r\n          const MM = ((this.state.time / 60) % 60).toFixed(0);\r\n          const HH = (this.state.time / (60 * 60)).toFixed(0);\r\n          return `$(HH):$(MM):$(SS)`;\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <span>{this.state.time}</span>\r\n            </div>\r\n        )\r\n    }\r\n}",{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":1,"column":16,"nodeType":"35","messageId":"36","endLine":1,"endColumn":25},{"ruleId":"37","severity":1,"message":"38","line":10,"column":15,"nodeType":"39","endLine":10,"endColumn":59},{"ruleId":"37","severity":1,"message":"38","line":30,"column":12,"nodeType":"39","endLine":30,"endColumn":60},{"ruleId":"33","severity":1,"message":"40","line":22,"column":15,"nodeType":"35","messageId":"36","endLine":22,"endColumn":26},{"ruleId":"33","severity":1,"message":"41","line":27,"column":17,"nodeType":"35","messageId":"36","endLine":27,"endColumn":19},{"ruleId":"33","severity":1,"message":"42","line":28,"column":17,"nodeType":"35","messageId":"36","endLine":28,"endColumn":19},{"ruleId":"33","severity":1,"message":"43","line":29,"column":17,"nodeType":"35","messageId":"36","endLine":29,"endColumn":19},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'displayTime' is assigned a value but never used.","'SS' is assigned a value but never used.","'MM' is assigned a value but never used.","'HH' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]